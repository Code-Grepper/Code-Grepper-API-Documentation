makeRequest("GET", "/api/get_user_linkedin_data.php?user_id=" + user_id).then(function (e) { drawPiechart(JSON.parse(e)).then(function (e) { var a = e.toDataURL(); (new FormData).append("data_url", a) }) }); var canvasSizeWidth = 757, canvasSizeHeight = 600, imageSize = 220, bubbleX = !1, bubbleY = !1, bubbleTextWidth = !1, bubbleText = !1; function drawPiechart(e) { return new Promise(function (a, t) { var i = e.user; i.profile_image ? i.profile_image = "/profile_images/" + i.profile_image : i.profile_image = "/app/img/default_profile.png"; for (var r = i.short_name, n = document.getElementById("profileChart"), o = n.getContext("2d"), l = [], s = [], c = [], f = [], b = 0, h = 0; h < e.s.length; h++) { b += e.s[h][1] } for (h = 0; h < e.s.length; h++) { l.push(e.s[h][1] / b), s.push(e.s[h][2]), c.push(e.s[h][0]); var d = Math.round(e.s[h][1] / b * 100) + "% of " + r + "'s time is \nspent programming in " + e.s[h][2] + "."; (w = Math.round(100 * e.s[h][3])) > 50 && (d += "\n" + r + " ranks in the top " + w + " percentile\n for " + e.s[h][2] + " expertise."), f.push(d) } var u = [], p = [], g = [], v = [], m = []; for (b = 0, h = 0; h < e.f.length; h++) { b += e.f[h][1] } for (h = 0; h < e.f.length; h++) { u.push(e.f[h][1] / b), p.push(e.f[h][0]), g.push(e.f[h][2]); var S = new Image; S.src = "/images/framework_icons/" + e.f[h][2] + ".png", m.push(S); var w; d = Math.round(e.f[h][1] / b * 100) + "% of " + r + "'s time is \nspent programming in " + e.f[h][0] + "."; (w = Math.round(100 * e.f[h][3])) > 50 && (d += "\n" + r + "Taylor ranks in the top " + w + " percentile\n for " + e.f[h][0] + " expertise."), v.push(d) } null === o && alert("Unable to initialize WebGL. Your browser or machine may not support it."); var T = new Image; T.src = i.profile_image; var z = new Image; z.src = "/app/img/icon_tall.png", T.onload = function () { drawProfileImage(T, o, i, z), a(n) }, drawDonut(u, o, 230, 300, p, g, v, m), drawDonut(l, o, imageSize / 2, 230, s, c, f, !1); var x, y, P = n.width, M = n.height; function k() { var e = n.getBoundingClientRect(); x = e.left, y = e.top } k(), window.onscroll = function (e) { k() }, window.onresize = function (e) { k() }, n.addEventListener("mousemove", function (e) { bubbleX = !1, e.preventDefault(), e.stopPropagation(), mouseX = parseInt(e.clientX - x), mouseY = parseInt(e.clientY - y), o.clearRect(0, 0, P, M), drawDonut(u, o, 230, 300, p, g, v, m, mouseX, mouseY), drawDonut(l, o, imageSize / 2, 230, s, c, f, !1, mouseX, mouseY), drawProfileImage(T, o, i, z, mouseX, mouseY), bubbleX && drawBubble(o, bubbleX, bubbleY, 10, bubbleTextWidth, bubbleText) }) }) } function drawProfileImage(e, a, t, i, r, n) { a.save(), a.beginPath(), a.arc(canvasSizeWidth / 2, canvasSizeHeight / 2, imageSize / 2, 0, 2 * Math.PI), a.closePath(), a.clip(), a.drawImage(e, canvasSizeWidth / 2 - imageSize / 2, canvasSizeHeight / 2 - imageSize / 2, imageSize, imageSize), a.restore(), a.beginPath(); for (var o = 0; o <= .3; o += .01) { var l = canvasSizeWidth / 2 + Math.cos(o) * (imageSize / 2), s = canvasSizeHeight / 2 + Math.sin(o) * (imageSize / 2); a.lineTo(l, s) } for (o = Math.PI - .3; o <= Math.PI; o += .01) { l = canvasSizeWidth / 2 + Math.cos(o) * (imageSize / 2), s = canvasSizeHeight / 2 + Math.sin(o) * (imageSize / 2); a.lineTo(l, s) } a.fillStyle = "rgba(" + hexToRgb(beltToColor(t.belt)) + ",0.8)", a.strokeStyle = "#000", a.closePath(), a.fill(), a.stroke(), a.drawImage(i, canvasSizeWidth / 2 + imageSize / 2 * .7, canvasSizeHeight / 2, 15, 31); var c = t.belt.charAt(0).toUpperCase() + t.belt.slice(1) + " Belt"; a.font = "16px arial", a.fillStyle = "#fff", a.fillStyle = beltToTextColor(t.belt); var f = a.measureText(c).width; if (a.fillText(c, canvasSizeWidth / 2 - f / 2, canvasSizeHeight / 2 + 20), a.closePath(), a.beginPath(), a.moveTo(canvasSizeWidth / 2, canvasSizeHeight / 2), a.arc(canvasSizeWidth / 2, canvasSizeHeight / 2, imageSize / 2, 0, 2 * Math.PI), a.isPointInPath(r, n)) { var b = t.short_name + " is a grepper " + t.belt + " belt which\nis equivalent to at least " + beltToExperience(t.belt) + "\n of programming experience."; t.overall_percentile > .5 && (b += "\n" + t.short_name + " ranks in the top " + Math.round(100 * t.overall_percentile) + "\npercentile of all developers"), bubbleX = canvasSizeWidth / 2 - 30, bubbleY = canvasSizeHeight / 2, bubbleTextWidth = 1, bubbleText = b } a.closePath() } function drawShape(e, a, t, i, r, n, o, l, s) { e.beginPath(); for (var c = a + 0; c < t - 0; c += .001) { var f = canvasSizeWidth / 2 + Math.cos(c) * r, b = canvasSizeHeight / 2 + Math.sin(c) * r; e.lineTo(f, b) } for (c = t - 0; c > a + 0; c -= .001) { f = canvasSizeWidth / 2 + Math.cos(c) * i, b = canvasSizeHeight / 2 + Math.sin(c) * i; e.lineTo(f, b) } f = canvasSizeWidth / 2 + Math.cos(a + 0) * r, b = canvasSizeHeight / 2 + Math.sin(a + 0) * r; e.lineTo(f, b), e.fillStyle = "rgba(" + hexToRgb(langToColor(o)) + ",0.7)", e.shadowColor = "transparent", e.isPointInPath(l, s) && (e.fillStyle = "rgba(" + hexToRgb(langToColor(o)) + ",0.9)"), e.fill(), e.strokeStyle = "rgba(0, 0, 0, 1.0)", e.stroke(), e.closePath() } function drawLabels(e, a, t, i, r, n, o, l, s, c) { e.font = "14px arial"; var f = e.measureText(n).width, b = (a + t) / 2, h = canvasSizeWidth / 2 + Math.cos(b) * ((r + i) / 2), d = canvasSizeHeight / 2 + Math.sin(b) * ((r + i) / 2); e.fillStyle = "Shell/Bash" == n ? "#fff" : "#000000", l ? e.fillText(n, h - f / 2, d - 5) : e.fillText(n, h - f / 2, d + 5), l && (e.shadowOffsetX = 1, e.shadowOffsetY = 1, e.shadowColor = "black", e.shadowBlur = 2, l.complete ? (e.drawImage(l, h - 10, d - 5 + 4, 20, 20), e.shadowColor = "transparent") : l.onload = function () { e.drawImage(l, h - 10, d - 5 + 4, 20, 20), e.shadowColor = "transparent" }) } function drawDonut(e, a, t, i, r, n, o, l, s, c) { var f = 0, b = 0, h = 0; for (let u = 0; u < e.length; u++) { if (b += e[u], drawShape(a, f, h = Math.PI * b * 2, t, i, r[u], !!n && n[u], s, c), s && a.isPointInPath(s, c)) { var d = (f + h) / 2; bubbleX = canvasSizeWidth / 2 + Math.cos(d) * ((i + t) / 2), bubbleY = canvasSizeHeight / 2 + Math.sin(d) * ((i + t) / 2), bubbleTextWidth = a.measureText(r[u]).width, bubbleText = o[u] } drawLabels(a, f, h, t, i, r[u], !!n && n[u], !!l && l[u], s, c), f = h } } function drawBubble(e, a, t, i, r, n) { var o = n.split("\n"), l = 0, s = 0; e.font = "14px arial"; for (var c = 0; c < o.length; c++)e.measureText(o[c]).width > s && (s = e.measureText(o[c]).width), l += 16; s += 12; var f = a + r / 2 + 22, b = t - (l += 12) / 2, h = !1; f > canvasSizeWidth / 2 && (h = !0, f = a - s - r / 2 - 22); var d = f + s, u = b + l; e.beginPath(), e.strokeStyle = "black", e.fillStyle = "rgba(0, 0, 0, 0.9)", e.moveTo(f + i, b), e.lineTo(d - i, b), e.quadraticCurveTo(d, b, d, b + i), h && (e.lineTo(d, b + i + l / 8), e.lineTo(d + 15, b + l / 2), e.lineTo(d, u - i - l / 8)), e.lineTo(d, u - i), e.quadraticCurveTo(d, u, d - i, u), e.lineTo(f + i, u), e.quadraticCurveTo(f, u, f, u - i), h || (e.lineTo(f, u - i - l / 8), e.lineTo(f - 15, b + l / 2), e.lineTo(f, b + i + l / 8)), e.lineTo(f, b + i), e.quadraticCurveTo(f, b, f + i, b), e.stroke(), e.fill(), e.font = "14px arial", e.fillStyle = "#fff"; for (c = 0; c < o.length; c++)e.fillText(o[c], f + 6, 6 + b + 16 * (c + .8)) } function langToColor(e) { return { php: "#55468c", javascript: "#72bf3b", html: "#f2cd5c", python: "#3475aa", css: "#f24141", shell: "#000", sql: "#00608A", whatever: "#CB7F58", java: "#E76F00", csharp: "#68207A", abap: "#fe7459", actionscript: "#515bcf", assembly: "#4b992e", basic: "#7b13f9", c: "#9dc3ea", clojure: "#a4e52c", cobol: "#903413", cpp: "#7f5b75", dart: "#9bdf4e", delphi: "#042bc3", elixir: "#5bff97", erlang: "#419e8e", fortran: "#629ba0", fsharp: "#f50572", go: "#4245fe", groovy: "#8adec7", haskell: "#557c59", julia: "#b9e2a2", kotlin: "#3f2f44", language: "#c604b2", lisp: "#9f55cb", lua: "#e5d1db", matlab: "#cf9d38", objectivec: "#622c93", pascal: "#e30fc4", perl: "#52c69c", postscript: "#353d9f", prolog: "#32d169", r: "#6f445c", ruby: "#eca49c", rust: "#1d88f7", scala: "#843d0c", scheme: "#95fda0", smalltalk: "#fcd3ae", swift: "#91b7b6", term: "#4f3958", typescript: "#cddf5c", vb: "#13e03d", webassembly: "#f3e333", angular: "#e23237", backbone: "#0071b5", bootstrap: "#563d7c", bootstrapcss: "#563d7c", bulma: "#00d1b2", cakephp: "#d33c45", codeigniter: "#ef4123", django: "#092e20", drupal: "#008ecf", ember: "#e05c43", express: "#4d4d4d", flask: "#000000", flutter: "#45d1fd", foundation: "#81d2e5", ionic: "#478aff", jquery: "#1069ad", laravel: "#ff2d20", materialize: "#f6a2ad", nextjs: "#404040", nodejs: "#539e43", react: "#61dafb", semantic: "#35bdb2", skeleton: "#111111", spring: "#6db33f", symfony: "#81e83e", unity: "#4a3d75", vaadin: "#00b4f0", vue: "#3a6168", wordpress: "#0087be", yii: "#eb6e2e", zend: "#68b604" }[e] } function beltToExperience(e) { return { white: "2 Month", yellow: "4 Months", orange: "8 Months", green: "1 Year", blue: "2 Years", purple: "4 Years", brown: "8 Years", black: "20 Years" }[e] } function beltToTextColor(e) { return { white: "#000", yellow: "#000", orange: "#000", green: "#000", blue: "#fff", purple: "#fff", brown: "#fff", black: "#fff" }[e] } function beltToColor(e) { return { white: "#F0F8FF", yellow: "#f2cd5c", orange: "#F29F41", green: "#72bf3b", blue: "#365FA0", purple: "#55468c", brown: "#8B4513", black: "#000000" }[e] } function LightenDarkenColor(e, a) { var t = !1; "#" == e[0] && (e = e.slice(1), t = !0); var i = parseInt(e, 16), r = (i >> 16) + a; r > 255 ? r = 255 : r < 0 && (r = 0); var n = (i >> 8 & 255) + a; n > 255 ? n = 255 : n < 0 && (n = 0); var o = (255 & i) + a; return o > 255 ? o = 255 : o < 0 && (o = 0), (t ? "#" : "") + (o | n << 8 | r << 16).toString(16) } function hexToRgb(e) { var a = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e); return a ? parseInt(a[1], 16) + "," + parseInt(a[2], 16) + "," + parseInt(a[3], 16) : null }